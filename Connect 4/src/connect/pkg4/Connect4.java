package connect.pkg4;

import java.awt.event.*;
import java.awt.*;
import java.util.Arrays;
import javax.swing.*;


/**
 *
 * @author Andrew Cameron
 */
public class Connect4 extends javax.swing.JFrame {
    /**
     * Creates new form NewApplication
     */
    public Connect4() {
        initComponents();
        changeIcon();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        title = new javax.swing.JLabel();
        gameEndText = new javax.swing.JLabel();
        drop1 = new javax.swing.JButton();
        drop2 = new javax.swing.JButton();
        drop3 = new javax.swing.JButton();
        drop4 = new javax.swing.JButton();
        drop5 = new javax.swing.JButton();
        drop6 = new javax.swing.JButton();
        drop7 = new javax.swing.JButton();
        gameBoard = new javax.swing.JLabel();
        c1r1 = new javax.swing.JLabel();
        c1r2 = new javax.swing.JLabel();
        c1r3 = new javax.swing.JLabel();
        c1r4 = new javax.swing.JLabel();
        c1r5 = new javax.swing.JLabel();
        c1r6 = new javax.swing.JLabel();
        c2r1 = new javax.swing.JLabel();
        c2r2 = new javax.swing.JLabel();
        c2r3 = new javax.swing.JLabel();
        c2r4 = new javax.swing.JLabel();
        c2r5 = new javax.swing.JLabel();
        c2r6 = new javax.swing.JLabel();
        c3r1 = new javax.swing.JLabel();
        c3r2 = new javax.swing.JLabel();
        c3r3 = new javax.swing.JLabel();
        c3r4 = new javax.swing.JLabel();
        c3r5 = new javax.swing.JLabel();
        c3r6 = new javax.swing.JLabel();
        c4r1 = new javax.swing.JLabel();
        c4r2 = new javax.swing.JLabel();
        c4r3 = new javax.swing.JLabel();
        c4r4 = new javax.swing.JLabel();
        c4r5 = new javax.swing.JLabel();
        c4r6 = new javax.swing.JLabel();
        c5r1 = new javax.swing.JLabel();
        c5r2 = new javax.swing.JLabel();
        c5r3 = new javax.swing.JLabel();
        c5r4 = new javax.swing.JLabel();
        c5r5 = new javax.swing.JLabel();
        c5r6 = new javax.swing.JLabel();
        c6r1 = new javax.swing.JLabel();
        c6r2 = new javax.swing.JLabel();
        c6r3 = new javax.swing.JLabel();
        c6r4 = new javax.swing.JLabel();
        c6r5 = new javax.swing.JLabel();
        c6r6 = new javax.swing.JLabel();
        c7r1 = new javax.swing.JLabel();
        c7r2 = new javax.swing.JLabel();
        c7r3 = new javax.swing.JLabel();
        c7r4 = new javax.swing.JLabel();
        c7r5 = new javax.swing.JLabel();
        c7r6 = new javax.swing.JLabel();
        dropAnim1 = new javax.swing.JLabel();
        dropAnim2 = new javax.swing.JLabel();
        dropAnim3 = new javax.swing.JLabel();
        dropAnim4 = new javax.swing.JLabel();
        dropAnim5 = new javax.swing.JLabel();
        dropAnim6 = new javax.swing.JLabel();
        dropAnim7 = new javax.swing.JLabel();
        reset = new javax.swing.JButton();
        resetAll = new javax.swing.JButton();
        scrbrdTitle = new javax.swing.JLabel();
        scrbrdRed = new javax.swing.JLabel();
        scrbrdYellow = new javax.swing.JLabel();
        backgroundImage = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Connect 4");
        setLocationByPlatform(true);
        setMaximumSize(new java.awt.Dimension(1015, 739));
        setMinimumSize(new java.awt.Dimension(1015, 739));
        setName("Connect 4"); // NOI18N
        setPreferredSize(new java.awt.Dimension(1015, 739));
        setResizable(false);
        getContentPane().setLayout(null);

        title.setIcon(new javax.swing.ImageIcon(getClass().getResource("/connect/pkg4/header_logo_small.png"))); // NOI18N
        getContentPane().add(title);
        title.setBounds(35, 50, 200, 62);

        gameEndText.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        gameEndText.setForeground(new java.awt.Color(255, 216, 0));
        gameEndText.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        gameEndText.setText(" ");
        getContentPane().add(gameEndText);
        gameEndText.setBounds(350, 250, 500, 200);

        drop1.setText("Drop Here");
        drop1.setMaximumSize(new java.awt.Dimension(100, 25));
        drop1.setMinimumSize(new java.awt.Dimension(100, 25));
        drop1.setPreferredSize(new java.awt.Dimension(100, 25));
        drop1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                drop1ActionPerformed(evt);
            }
        });
        getContentPane().add(drop1);
        drop1.setBounds(250, 20, 100, 25);

        drop2.setText("Drop Here");
        drop2.setMaximumSize(new java.awt.Dimension(100, 25));
        drop2.setMinimumSize(new java.awt.Dimension(100, 25));
        drop2.setPreferredSize(new java.awt.Dimension(100, 25));
        drop2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                drop2ActionPerformed(evt);
            }
        });
        getContentPane().add(drop2);
        drop2.setBounds(350, 20, 100, 25);

        drop3.setText("Drop Here");
        drop3.setMaximumSize(new java.awt.Dimension(100, 25));
        drop3.setMinimumSize(new java.awt.Dimension(100, 25));
        drop3.setPreferredSize(new java.awt.Dimension(100, 25));
        drop3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                drop3ActionPerformed(evt);
            }
        });
        getContentPane().add(drop3);
        drop3.setBounds(450, 20, 100, 25);

        drop4.setText("Drop Here");
        drop4.setMaximumSize(new java.awt.Dimension(100, 25));
        drop4.setMinimumSize(new java.awt.Dimension(100, 25));
        drop4.setPreferredSize(new java.awt.Dimension(100, 25));
        drop4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                drop4ActionPerformed(evt);
            }
        });
        getContentPane().add(drop4);
        drop4.setBounds(550, 20, 100, 25);

        drop5.setText("Drop Here");
        drop5.setMaximumSize(new java.awt.Dimension(100, 25));
        drop5.setMinimumSize(new java.awt.Dimension(100, 25));
        drop5.setPreferredSize(new java.awt.Dimension(100, 25));
        drop5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                drop5ActionPerformed(evt);
            }
        });
        getContentPane().add(drop5);
        drop5.setBounds(650, 20, 100, 25);

        drop6.setText("Drop Here");
        drop6.setMaximumSize(new java.awt.Dimension(100, 25));
        drop6.setMinimumSize(new java.awt.Dimension(100, 25));
        drop6.setPreferredSize(new java.awt.Dimension(100, 25));
        drop6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                drop6ActionPerformed(evt);
            }
        });
        getContentPane().add(drop6);
        drop6.setBounds(750, 20, 100, 25);

        drop7.setText("Drop Here");
        drop7.setMaximumSize(new java.awt.Dimension(100, 25));
        drop7.setMinimumSize(new java.awt.Dimension(100, 25));
        drop7.setPreferredSize(new java.awt.Dimension(100, 25));
        drop7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                drop7ActionPerformed(evt);
            }
        });
        getContentPane().add(drop7);
        drop7.setBounds(850, 20, 100, 25);

        gameBoard.setIcon(new javax.swing.ImageIcon(getClass().getResource("/connect/pkg4/gameboard.png"))); // NOI18N
        getContentPane().add(gameBoard);
        gameBoard.setBounds(245, 45, 710, 610);

        c1r1.setMaximumSize(new java.awt.Dimension(100, 100));
        c1r1.setMinimumSize(new java.awt.Dimension(100, 100));
        c1r1.setPreferredSize(new java.awt.Dimension(100, 100));
        getContentPane().add(c1r1);
        c1r1.setBounds(250, 550, 100, 100);

        c1r2.setMaximumSize(new java.awt.Dimension(100, 100));
        c1r2.setMinimumSize(new java.awt.Dimension(100, 100));
        c1r2.setPreferredSize(new java.awt.Dimension(100, 100));
        getContentPane().add(c1r2);
        c1r2.setBounds(250, 450, 100, 100);

        c1r3.setMaximumSize(new java.awt.Dimension(100, 100));
        c1r3.setMinimumSize(new java.awt.Dimension(100, 100));
        c1r3.setPreferredSize(new java.awt.Dimension(100, 100));
        getContentPane().add(c1r3);
        c1r3.setBounds(250, 350, 100, 100);

        c1r4.setMaximumSize(new java.awt.Dimension(100, 100));
        c1r4.setMinimumSize(new java.awt.Dimension(100, 100));
        c1r4.setPreferredSize(new java.awt.Dimension(100, 100));
        getContentPane().add(c1r4);
        c1r4.setBounds(250, 250, 100, 100);

        c1r5.setMaximumSize(new java.awt.Dimension(100, 100));
        c1r5.setMinimumSize(new java.awt.Dimension(100, 100));
        c1r5.setPreferredSize(new java.awt.Dimension(100, 100));
        getContentPane().add(c1r5);
        c1r5.setBounds(250, 150, 100, 100);

        c1r6.setBackground(new java.awt.Color(255, 216, 0));
        c1r6.setMaximumSize(new java.awt.Dimension(100, 100));
        c1r6.setMinimumSize(new java.awt.Dimension(100, 100));
        c1r6.setPreferredSize(new java.awt.Dimension(100, 100));
        getContentPane().add(c1r6);
        c1r6.setBounds(250, 50, 100, 100);

        c2r1.setMaximumSize(new java.awt.Dimension(100, 100));
        c2r1.setMinimumSize(new java.awt.Dimension(100, 100));
        c2r1.setPreferredSize(new java.awt.Dimension(100, 100));
        getContentPane().add(c2r1);
        c2r1.setBounds(350, 550, 100, 100);

        c2r2.setMaximumSize(new java.awt.Dimension(100, 100));
        c2r2.setMinimumSize(new java.awt.Dimension(100, 100));
        c2r2.setPreferredSize(new java.awt.Dimension(100, 100));
        getContentPane().add(c2r2);
        c2r2.setBounds(350, 450, 100, 100);

        c2r3.setMaximumSize(new java.awt.Dimension(100, 100));
        c2r3.setMinimumSize(new java.awt.Dimension(100, 100));
        c2r3.setPreferredSize(new java.awt.Dimension(100, 100));
        getContentPane().add(c2r3);
        c2r3.setBounds(350, 350, 100, 100);

        c2r4.setMaximumSize(new java.awt.Dimension(100, 100));
        c2r4.setMinimumSize(new java.awt.Dimension(100, 100));
        c2r4.setPreferredSize(new java.awt.Dimension(100, 100));
        getContentPane().add(c2r4);
        c2r4.setBounds(350, 250, 100, 100);

        c2r5.setMaximumSize(new java.awt.Dimension(100, 100));
        c2r5.setMinimumSize(new java.awt.Dimension(100, 100));
        c2r5.setPreferredSize(new java.awt.Dimension(100, 100));
        getContentPane().add(c2r5);
        c2r5.setBounds(350, 150, 100, 100);

        c2r6.setMaximumSize(new java.awt.Dimension(100, 100));
        c2r6.setMinimumSize(new java.awt.Dimension(100, 100));
        c2r6.setPreferredSize(new java.awt.Dimension(100, 100));
        getContentPane().add(c2r6);
        c2r6.setBounds(350, 50, 100, 100);

        c3r1.setMaximumSize(new java.awt.Dimension(100, 100));
        c3r1.setMinimumSize(new java.awt.Dimension(100, 100));
        c3r1.setPreferredSize(new java.awt.Dimension(100, 100));
        getContentPane().add(c3r1);
        c3r1.setBounds(450, 550, 100, 100);

        c3r2.setMaximumSize(new java.awt.Dimension(100, 100));
        c3r2.setMinimumSize(new java.awt.Dimension(100, 100));
        c3r2.setPreferredSize(new java.awt.Dimension(100, 100));
        getContentPane().add(c3r2);
        c3r2.setBounds(450, 450, 100, 100);

        c3r3.setMaximumSize(new java.awt.Dimension(100, 100));
        c3r3.setMinimumSize(new java.awt.Dimension(100, 100));
        c3r3.setPreferredSize(new java.awt.Dimension(100, 100));
        getContentPane().add(c3r3);
        c3r3.setBounds(450, 350, 100, 100);

        c3r4.setMaximumSize(new java.awt.Dimension(100, 100));
        c3r4.setMinimumSize(new java.awt.Dimension(100, 100));
        c3r4.setPreferredSize(new java.awt.Dimension(100, 100));
        getContentPane().add(c3r4);
        c3r4.setBounds(450, 250, 100, 100);

        c3r5.setMaximumSize(new java.awt.Dimension(100, 100));
        c3r5.setMinimumSize(new java.awt.Dimension(100, 100));
        c3r5.setPreferredSize(new java.awt.Dimension(100, 100));
        getContentPane().add(c3r5);
        c3r5.setBounds(450, 150, 100, 100);

        c3r6.setMaximumSize(new java.awt.Dimension(100, 100));
        c3r6.setMinimumSize(new java.awt.Dimension(100, 100));
        c3r6.setPreferredSize(new java.awt.Dimension(100, 100));
        getContentPane().add(c3r6);
        c3r6.setBounds(450, 50, 100, 100);

        c4r1.setMaximumSize(new java.awt.Dimension(100, 100));
        c4r1.setMinimumSize(new java.awt.Dimension(100, 100));
        c4r1.setPreferredSize(new java.awt.Dimension(100, 100));
        getContentPane().add(c4r1);
        c4r1.setBounds(550, 550, 100, 100);

        c4r2.setMaximumSize(new java.awt.Dimension(100, 100));
        c4r2.setMinimumSize(new java.awt.Dimension(100, 100));
        c4r2.setPreferredSize(new java.awt.Dimension(100, 100));
        getContentPane().add(c4r2);
        c4r2.setBounds(550, 450, 100, 100);

        c4r3.setMaximumSize(new java.awt.Dimension(100, 100));
        c4r3.setMinimumSize(new java.awt.Dimension(100, 100));
        c4r3.setPreferredSize(new java.awt.Dimension(100, 100));
        getContentPane().add(c4r3);
        c4r3.setBounds(550, 350, 100, 100);

        c4r4.setMaximumSize(new java.awt.Dimension(100, 100));
        c4r4.setMinimumSize(new java.awt.Dimension(100, 100));
        c4r4.setPreferredSize(new java.awt.Dimension(100, 100));
        getContentPane().add(c4r4);
        c4r4.setBounds(550, 250, 100, 100);

        c4r5.setMaximumSize(new java.awt.Dimension(100, 100));
        c4r5.setMinimumSize(new java.awt.Dimension(100, 100));
        c4r5.setPreferredSize(new java.awt.Dimension(100, 100));
        getContentPane().add(c4r5);
        c4r5.setBounds(550, 150, 100, 100);

        c4r6.setMaximumSize(new java.awt.Dimension(100, 100));
        c4r6.setMinimumSize(new java.awt.Dimension(100, 100));
        c4r6.setPreferredSize(new java.awt.Dimension(100, 100));
        getContentPane().add(c4r6);
        c4r6.setBounds(550, 50, 100, 100);

        c5r1.setMaximumSize(new java.awt.Dimension(100, 100));
        c5r1.setMinimumSize(new java.awt.Dimension(100, 100));
        c5r1.setPreferredSize(new java.awt.Dimension(100, 100));
        getContentPane().add(c5r1);
        c5r1.setBounds(650, 550, 100, 100);

        c5r2.setMaximumSize(new java.awt.Dimension(100, 100));
        c5r2.setMinimumSize(new java.awt.Dimension(100, 100));
        c5r2.setPreferredSize(new java.awt.Dimension(100, 100));
        getContentPane().add(c5r2);
        c5r2.setBounds(650, 450, 100, 100);

        c5r3.setMaximumSize(new java.awt.Dimension(100, 100));
        c5r3.setMinimumSize(new java.awt.Dimension(100, 100));
        c5r3.setPreferredSize(new java.awt.Dimension(100, 100));
        getContentPane().add(c5r3);
        c5r3.setBounds(650, 350, 100, 100);

        c5r4.setMaximumSize(new java.awt.Dimension(100, 100));
        c5r4.setMinimumSize(new java.awt.Dimension(100, 100));
        c5r4.setPreferredSize(new java.awt.Dimension(100, 100));
        getContentPane().add(c5r4);
        c5r4.setBounds(650, 250, 100, 100);

        c5r5.setMaximumSize(new java.awt.Dimension(100, 100));
        c5r5.setMinimumSize(new java.awt.Dimension(100, 100));
        c5r5.setPreferredSize(new java.awt.Dimension(100, 100));
        getContentPane().add(c5r5);
        c5r5.setBounds(650, 150, 100, 100);

        c5r6.setMaximumSize(new java.awt.Dimension(100, 100));
        c5r6.setMinimumSize(new java.awt.Dimension(100, 100));
        c5r6.setPreferredSize(new java.awt.Dimension(100, 100));
        getContentPane().add(c5r6);
        c5r6.setBounds(650, 50, 100, 100);

        c6r1.setMaximumSize(new java.awt.Dimension(100, 100));
        c6r1.setMinimumSize(new java.awt.Dimension(100, 100));
        c6r1.setPreferredSize(new java.awt.Dimension(100, 100));
        getContentPane().add(c6r1);
        c6r1.setBounds(750, 550, 100, 100);

        c6r2.setMaximumSize(new java.awt.Dimension(100, 100));
        c6r2.setMinimumSize(new java.awt.Dimension(100, 100));
        c6r2.setPreferredSize(new java.awt.Dimension(100, 100));
        getContentPane().add(c6r2);
        c6r2.setBounds(750, 450, 100, 100);

        c6r3.setMaximumSize(new java.awt.Dimension(100, 100));
        c6r3.setMinimumSize(new java.awt.Dimension(100, 100));
        c6r3.setPreferredSize(new java.awt.Dimension(100, 100));
        getContentPane().add(c6r3);
        c6r3.setBounds(750, 350, 100, 100);

        c6r4.setMaximumSize(new java.awt.Dimension(100, 100));
        c6r4.setMinimumSize(new java.awt.Dimension(100, 100));
        c6r4.setPreferredSize(new java.awt.Dimension(100, 100));
        getContentPane().add(c6r4);
        c6r4.setBounds(750, 250, 100, 100);

        c6r5.setMaximumSize(new java.awt.Dimension(100, 100));
        c6r5.setMinimumSize(new java.awt.Dimension(100, 100));
        c6r5.setPreferredSize(new java.awt.Dimension(100, 100));
        getContentPane().add(c6r5);
        c6r5.setBounds(750, 150, 100, 100);

        c6r6.setMaximumSize(new java.awt.Dimension(100, 100));
        c6r6.setMinimumSize(new java.awt.Dimension(100, 100));
        c6r6.setPreferredSize(new java.awt.Dimension(100, 100));
        getContentPane().add(c6r6);
        c6r6.setBounds(750, 50, 100, 100);

        c7r1.setMaximumSize(new java.awt.Dimension(100, 100));
        c7r1.setMinimumSize(new java.awt.Dimension(100, 100));
        c7r1.setPreferredSize(new java.awt.Dimension(100, 100));
        getContentPane().add(c7r1);
        c7r1.setBounds(850, 550, 100, 100);

        c7r2.setMaximumSize(new java.awt.Dimension(100, 100));
        c7r2.setMinimumSize(new java.awt.Dimension(100, 100));
        c7r2.setPreferredSize(new java.awt.Dimension(100, 100));
        getContentPane().add(c7r2);
        c7r2.setBounds(850, 450, 100, 100);

        c7r3.setMaximumSize(new java.awt.Dimension(100, 100));
        c7r3.setMinimumSize(new java.awt.Dimension(100, 100));
        c7r3.setPreferredSize(new java.awt.Dimension(100, 100));
        getContentPane().add(c7r3);
        c7r3.setBounds(850, 350, 100, 100);

        c7r4.setMaximumSize(new java.awt.Dimension(100, 100));
        c7r4.setMinimumSize(new java.awt.Dimension(100, 100));
        c7r4.setPreferredSize(new java.awt.Dimension(100, 100));
        getContentPane().add(c7r4);
        c7r4.setBounds(850, 250, 100, 100);

        c7r5.setMaximumSize(new java.awt.Dimension(100, 100));
        c7r5.setMinimumSize(new java.awt.Dimension(100, 100));
        c7r5.setPreferredSize(new java.awt.Dimension(100, 100));
        getContentPane().add(c7r5);
        c7r5.setBounds(850, 150, 100, 100);

        c7r6.setMaximumSize(new java.awt.Dimension(100, 100));
        c7r6.setMinimumSize(new java.awt.Dimension(100, 100));
        c7r6.setPreferredSize(new java.awt.Dimension(100, 100));
        getContentPane().add(c7r6);
        c7r6.setBounds(850, 50, 100, 100);

        dropAnim1.setMaximumSize(new java.awt.Dimension(100, 800));
        dropAnim1.setMinimumSize(new java.awt.Dimension(100, 800));
        dropAnim1.setPreferredSize(new java.awt.Dimension(100, 800));
        getContentPane().add(dropAnim1);
        dropAnim1.setBounds(252, -50, 100, 800);
        dropAnim1.getAccessibleContext().setAccessibleDescription("");

        dropAnim2.setMaximumSize(new java.awt.Dimension(100, 800));
        dropAnim2.setMinimumSize(new java.awt.Dimension(100, 800));
        dropAnim2.setPreferredSize(new java.awt.Dimension(100, 800));
        getContentPane().add(dropAnim2);
        dropAnim2.setBounds(352, -50, 100, 800);
        dropAnim2.getAccessibleContext().setAccessibleDescription("");

        dropAnim3.setMaximumSize(new java.awt.Dimension(100, 800));
        dropAnim3.setMinimumSize(new java.awt.Dimension(100, 800));
        dropAnim3.setPreferredSize(new java.awt.Dimension(100, 800));
        getContentPane().add(dropAnim3);
        dropAnim3.setBounds(452, -50, 100, 800);
        dropAnim3.getAccessibleContext().setAccessibleDescription("");

        dropAnim4.setMaximumSize(new java.awt.Dimension(100, 800));
        dropAnim4.setMinimumSize(new java.awt.Dimension(100, 800));
        dropAnim4.setPreferredSize(new java.awt.Dimension(100, 800));
        getContentPane().add(dropAnim4);
        dropAnim4.setBounds(552, -50, 100, 800);
        dropAnim4.getAccessibleContext().setAccessibleDescription("");

        dropAnim5.setMaximumSize(new java.awt.Dimension(100, 800));
        dropAnim5.setMinimumSize(new java.awt.Dimension(100, 800));
        dropAnim5.setPreferredSize(new java.awt.Dimension(100, 800));
        getContentPane().add(dropAnim5);
        dropAnim5.setBounds(651, -50, 100, 800);
        dropAnim5.getAccessibleContext().setAccessibleDescription("");

        dropAnim6.setMaximumSize(new java.awt.Dimension(100, 800));
        dropAnim6.setMinimumSize(new java.awt.Dimension(100, 800));
        dropAnim6.setPreferredSize(new java.awt.Dimension(100, 800));
        getContentPane().add(dropAnim6);
        dropAnim6.setBounds(751, -50, 100, 800);
        dropAnim6.getAccessibleContext().setAccessibleDescription("");

        dropAnim7.setMaximumSize(new java.awt.Dimension(100, 800));
        dropAnim7.setMinimumSize(new java.awt.Dimension(100, 800));
        dropAnim7.setPreferredSize(new java.awt.Dimension(100, 800));
        getContentPane().add(dropAnim7);
        dropAnim7.setBounds(850, -50, 100, 800);
        dropAnim7.getAccessibleContext().setAccessibleDescription("");

        reset.setText("Reset Game");
        reset.setEnabled(false);
        reset.setMaximumSize(new java.awt.Dimension(200, 100));
        reset.setMinimumSize(new java.awt.Dimension(200, 100));
        reset.setPreferredSize(new java.awt.Dimension(200, 100));
        reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetActionPerformed(evt);
            }
        });
        getContentPane().add(reset);
        reset.setBounds(35, 300, 200, 100);
        reset.getAccessibleContext().setAccessibleName("reset");

        resetAll.setText("Reset all");
        resetAll.setMaximumSize(new java.awt.Dimension(200, 100));
        resetAll.setMinimumSize(new java.awt.Dimension(200, 100));
        resetAll.setPreferredSize(new java.awt.Dimension(200, 100));
        resetAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetAllActionPerformed(evt);
            }
        });
        getContentPane().add(resetAll);
        resetAll.setBounds(35, 450, 200, 100);
        resetAll.getAccessibleContext().setAccessibleName("resetAll");

        scrbrdTitle.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        scrbrdTitle.setForeground(new java.awt.Color(0, 38, 255));
        scrbrdTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        scrbrdTitle.setText("Games Won");
        scrbrdTitle.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 38, 255), 6));
        scrbrdTitle.setMaximumSize(new java.awt.Dimension(203, 50));
        scrbrdTitle.setMinimumSize(new java.awt.Dimension(203, 50));
        scrbrdTitle.setPreferredSize(new java.awt.Dimension(203, 50));
        getContentPane().add(scrbrdTitle);
        scrbrdTitle.setBounds(35, 150, 200, 53);

        scrbrdRed.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        scrbrdRed.setForeground(new java.awt.Color(255, 4, 0));
        scrbrdRed.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        scrbrdRed.setText("0");
        scrbrdRed.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 38, 255), 6));
        scrbrdRed.setMaximumSize(new java.awt.Dimension(100, 50));
        scrbrdRed.setMinimumSize(new java.awt.Dimension(100, 50));
        scrbrdRed.setPreferredSize(new java.awt.Dimension(103, 50));
        getContentPane().add(scrbrdRed);
        scrbrdRed.setBounds(35, 197, 103, 53);

        scrbrdYellow.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        scrbrdYellow.setForeground(new java.awt.Color(255, 255, 51));
        scrbrdYellow.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        scrbrdYellow.setText("0");
        scrbrdYellow.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 38, 255), 6));
        scrbrdYellow.setMaximumSize(new java.awt.Dimension(100, 50));
        scrbrdYellow.setMinimumSize(new java.awt.Dimension(100, 50));
        scrbrdYellow.setPreferredSize(new java.awt.Dimension(103, 50));
        getContentPane().add(scrbrdYellow);
        scrbrdYellow.setBounds(132, 197, 103, 53);

        backgroundImage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        backgroundImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/connect/pkg4/background.png"))); // NOI18N
        getContentPane().add(backgroundImage);
        backgroundImage.setBounds(0, 0, 1000, 700);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    int [ ] [ ] game = new int [ 7 ] [ 6 ] ;
    int V = 0;
    int H = 0;
    int col = 1;
    int round = 0;
    int turn = 0;
    int turns = 0;
    int column = 0;
    int column1 = -50;
    int column2 = -50;
    int column3 = -50;
    int column4 = -50;
    int column5 = -50;
    int column6 = -50;
    int column7 = -50;
    int victories = 0;
    boolean winner = false;
    ImageIcon dropAnimYellow = new javax.swing.ImageIcon(getClass().getResource("/connect/pkg4/dropAnimYellow.gif"));
    ImageIcon dropAnimRed = new javax.swing.ImageIcon(getClass().getResource("/connect/pkg4/dropAnimRed.gif"));
    ImageIcon red = new javax.swing.ImageIcon(getClass().getResource("/connect/pkg4/red.png"));
    ImageIcon yellow = new javax.swing.ImageIcon(getClass().getResource("/connect/pkg4/yellow.png"));
    ImageIcon placeholder;
    
    private void changeIcon() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/connect/pkg4/4.png")));
    }
    
    public void dropPeice(){
        disableDropping();
        turns++;
        dropAnimYellow.getImage().flush();
        dropAnimRed.getImage().flush();
        dropAnim1.setIcon(null);
        dropAnim2.setIcon(null);
        dropAnim3.setIcon(null);
        dropAnim4.setIcon(null);
        dropAnim5.setIcon(null);
        dropAnim6.setIcon(null);
        dropAnim7.setIcon(null);
    }
    
    public void disableDropping() {
        drop1.setEnabled(false);
        drop2.setEnabled(false);
        drop3.setEnabled(false);
        drop4.setEnabled(false);
        drop5.setEnabled(false);
        drop6.setEnabled(false);
        drop7.setEnabled(false);
        resetAll.setEnabled(false);
    }
    
    public void enableDropping() {
        if (column1 > -650) {drop1.setEnabled(true);}
        if (column2 > -650) {drop2.setEnabled(true);}
        if (column3 > -650) {drop3.setEnabled(true);}
        if (column4 > -650) {drop4.setEnabled(true);}
        if (column5 > -650) {drop5.setEnabled(true);}
        if (column6 > -650) {drop6.setEnabled(true);}
        if (column7 > -650) {drop7.setEnabled(true);}
        if (column1 <= -650 && column2 <= -650 && column3 <= -650 && column4 <= -650
                && column5 <= -650 && column6 <= -650 && column7 <= -650) {
            gameEndText.setFont(new java.awt.Font("Tahoma", 1, 96));
            gameEndText.setForeground(new java.awt.Color(204, 204, 204));
            gameEndText.setText("Tie");
            reset.setEnabled(true);
        }
        resetAll.setEnabled(true);
    }
    
    public void overlayLastPeice() {
        if (turn == 1) {
            placeholder = yellow;
            col = 1;
        } else {
            placeholder = red;
            col = 2;
        }
        H = column - 1;
        if (column == 1) {
            if (column1 == -150) {c1r1.setIcon(placeholder); game[0][0] = col; V = 0;}
            if (column1 == -250) {c1r2.setIcon(placeholder); game[0][1] = col; V = 1;}
            if (column1 == -350) {c1r3.setIcon(placeholder); game[0][2] = col; V = 2;}
            if (column1 == -450) {c1r4.setIcon(placeholder); game[0][3] = col; V = 3;}
            if (column1 == -550) {c1r5.setIcon(placeholder); game[0][4] = col; V = 4;}
            if (column1 == -650) {c1r6.setIcon(placeholder); game[0][5] = col; V = 5;}
        }
        if (column == 2) {
            if (column2 == -150) {c2r1.setIcon(placeholder); game[1][0] = col; V = 0;}
            if (column2 == -250) {c2r2.setIcon(placeholder); game[1][1] = col; V = 1;}
            if (column2 == -350) {c2r3.setIcon(placeholder); game[1][2] = col; V = 2;}
            if (column2 == -450) {c2r4.setIcon(placeholder); game[1][3] = col; V = 3;}
            if (column2 == -550) {c2r5.setIcon(placeholder); game[1][4] = col; V = 4;}
            if (column2 == -650) {c2r6.setIcon(placeholder); game[1][5] = col; V = 5;}
        }
        if (column == 3) {
            if (column3 == -150) {c3r1.setIcon(placeholder); game[2][0] = col; V = 0;}
            if (column3 == -250) {c3r2.setIcon(placeholder); game[2][1] = col; V = 1;}
            if (column3 == -350) {c3r3.setIcon(placeholder); game[2][2] = col; V = 2;}
            if (column3 == -450) {c3r4.setIcon(placeholder); game[2][3] = col; V = 3;}
            if (column3 == -550) {c3r5.setIcon(placeholder); game[2][4] = col; V = 4;}
            if (column3 == -650) {c3r6.setIcon(placeholder); game[2][5] = col; V = 5;}
        }
        if (column == 4) {
            if (column4 == -150) {c4r1.setIcon(placeholder); game[3][0] = col; V = 0;}
            if (column4 == -250) {c4r2.setIcon(placeholder); game[3][1] = col; V = 1;}
            if (column4 == -350) {c4r3.setIcon(placeholder); game[3][2] = col; V = 2;}
            if (column4 == -450) {c4r4.setIcon(placeholder); game[3][3] = col; V = 3;}
            if (column4 == -550) {c4r5.setIcon(placeholder); game[3][4] = col; V = 4;}
            if (column4 == -650) {c4r6.setIcon(placeholder); game[3][5] = col; V = 5;}
        }
        if (column == 5) {
            if (column5 == -150) {c5r1.setIcon(placeholder); game[4][0] = col; V = 0;}
            if (column5 == -250) {c5r2.setIcon(placeholder); game[4][1] = col; V = 1;}
            if (column5 == -350) {c5r3.setIcon(placeholder); game[4][2] = col; V = 2;}
            if (column5 == -450) {c5r4.setIcon(placeholder); game[4][3] = col; V = 3;}
            if (column5 == -550) {c5r5.setIcon(placeholder); game[4][4] = col; V = 4;}
            if (column5 == -650) {c5r6.setIcon(placeholder); game[4][5] = col; V = 5;}
        }
        if (column == 6) {
            if (column6 == -150) {c6r1.setIcon(placeholder); game[5][0] = col; V = 0;}
            if (column6 == -250) {c6r2.setIcon(placeholder); game[5][1] = col; V = 1;}
            if (column6 == -350) {c6r3.setIcon(placeholder); game[5][2] = col; V = 2;}
            if (column6 == -450) {c6r4.setIcon(placeholder); game[5][3] = col; V = 3;}
            if (column6 == -550) {c6r5.setIcon(placeholder); game[5][4] = col; V = 4;}
            if (column6 == -650) {c6r6.setIcon(placeholder); game[5][5] = col; V = 5;}
        }
        if (column == 7) {
            if (column7 == -150) {c7r1.setIcon(placeholder); game[6][0] = col; V = 0;}
            if (column7 == -250) {c7r2.setIcon(placeholder); game[6][1] = col; V = 1;}
            if (column7 == -350) {c7r3.setIcon(placeholder); game[6][2] = col; V = 2;}
            if (column7 == -450) {c7r4.setIcon(placeholder); game[6][3] = col; V = 3;}
            if (column7 == -550) {c7r5.setIcon(placeholder); game[6][4] = col; V = 4;}
            if (column7 == -650) {c7r6.setIcon(placeholder); game[6][5] = col; V = 5;}
        }
    }
    
    public void checkWin(){
        if (turns >= 7){
            try {
            if (game[H][V-1] == col && game[H][V-2] == col && game[H][V-3] == col) {
                winner = true;
            }
            } catch(ArrayIndexOutOfBoundsException e) {
            }
            try {
            if (game[H-3][V] == col && game[H-2][V] == col && game[H-1][V] == col) {
                winner = true;
            }
            } catch(ArrayIndexOutOfBoundsException e) {
            }
            try {
            if (game[H-2][V] == col && game[H-1][V] == col && game[H+1][V] == col) {
                winner = true;
            }
            } catch(ArrayIndexOutOfBoundsException e) {
            }
            try {
            if (game[H-1][V] == col && game[H+1][V] == col && game[H+2][V] == col) {
                winner = true;
            }
            } catch(ArrayIndexOutOfBoundsException e) {
            }
            try {
            if (game[H+1][V] == col && game[H+2][V] == col && game[H+3][V] == col) {
                winner = true;
            }
            } catch(ArrayIndexOutOfBoundsException e) {
            }
            try {
            if (game[H-3][V-3] == col && game[H-2][V-2] == col && game[H-1][V-1] == col) {
                winner = true;
            }
            } catch(ArrayIndexOutOfBoundsException e) {
            }
            try {
            if (game[H-2][V-2] == col && game[H-1][V-1] == col && game[H+1][V+1] == col) {
                winner = true;
            }
            } catch(ArrayIndexOutOfBoundsException e) {
            }
            try {
            if (game[H-1][V-1] == col && game[H+1][V+1] == col && game[H+2][V+2] == col) {
                winner = true;
            }
            } catch(ArrayIndexOutOfBoundsException e) {
            }
            try {
            if (game[H+1][V+1] == col && game[H+2][V+2] == col && game[H+3][V+3] == col) {
                winner = true;
            }
            } catch(ArrayIndexOutOfBoundsException e) {
            }
            try {
            if (game[H-3][V+3] == col && game[H-2][V+2] == col && game[H-1][V+1] == col) {
                winner = true;
            }
            } catch(ArrayIndexOutOfBoundsException e) {
            }
            try {
            if (game[H-2][V+2] == col && game[H-1][V+1] == col && game[H+1][V-1] == col) {
                winner = true;
            }
            } catch(ArrayIndexOutOfBoundsException e) {
            }
            try {
            if (game[H-1][V+1] == col && game[H+1][V-1] == col && game[H+2][V-2] == col) {
                winner = true;
            }
            } catch(ArrayIndexOutOfBoundsException e) {
            }
            try {
            if (game[H+1][V-1] == col && game[H+2][V-2] == col && game[H+3][V-3] == col) {
                winner = true;
            }
            } catch(ArrayIndexOutOfBoundsException e) {
            }
        }
    }
    
    public void reset() {
        winner = false;
        reset.setEnabled(false);
        gameEndText.setText(" ");
        for (int[] row: game){Arrays.fill(row, 0);}
        turns = 0;
        column = 0;
        column1 = -50;
        column2 = -50;
        column3 = -50;
        column4 = -50;
        column5 = -50;
        column6 = -50;
        column7 = -50;
        c1r1.setIcon(null);
        c1r2.setIcon(null);
        c1r3.setIcon(null);
        c1r4.setIcon(null);
        c1r5.setIcon(null);
        c1r6.setIcon(null);
        c2r1.setIcon(null);
        c2r2.setIcon(null);
        c2r3.setIcon(null);
        c2r4.setIcon(null);
        c2r5.setIcon(null);
        c2r6.setIcon(null);
        c3r1.setIcon(null);
        c3r2.setIcon(null);
        c3r3.setIcon(null);
        c3r4.setIcon(null);
        c3r5.setIcon(null);
        c3r6.setIcon(null);
        c4r1.setIcon(null);
        c4r2.setIcon(null);
        c4r3.setIcon(null);
        c4r4.setIcon(null);
        c4r5.setIcon(null);
        c4r6.setIcon(null);
        c5r1.setIcon(null);
        c5r2.setIcon(null);
        c5r3.setIcon(null);
        c5r4.setIcon(null);
        c5r5.setIcon(null);
        c5r6.setIcon(null);
        c6r1.setIcon(null);
        c6r2.setIcon(null);
        c6r3.setIcon(null);
        c6r4.setIcon(null);
        c6r5.setIcon(null);
        c6r6.setIcon(null);
        c7r1.setIcon(null);
        c7r2.setIcon(null);
        c7r3.setIcon(null);
        c7r4.setIcon(null);
        c7r5.setIcon(null);
        c7r6.setIcon(null);
        dropAnim1.setIcon(null);
        dropAnim2.setIcon(null);
        dropAnim3.setIcon(null);
        dropAnim4.setIcon(null);
        dropAnim5.setIcon(null);
        dropAnim6.setIcon(null);
        dropAnim7.setIcon(null);
        if (round % 2 == 0 || round == 0){
            turn = 0;
            col = 1;
        } else {
            turn = 1;
            col = 2;
        }
        enableDropping();
    }
    
    javax.swing.Timer t = new javax.swing.Timer(2000, new ActionListener() {
          public void actionPerformed(ActionEvent e) {
              overlayLastPeice();
              checkWin();
              if(winner == false) {
                  enableDropping();
              } else {
                  if (col == 1){
                        gameEndText.setFont(new java.awt.Font("Tahoma", 1, 48));
                        gameEndText.setForeground(new java.awt.Color(255, 255, 51));
                        gameEndText.setText("Yellow Wins!");
                        reset.setEnabled(true);
                        resetAll.setEnabled(true);
                        victories = Integer.parseInt(scrbrdYellow.getText());
                        victories++;
                        scrbrdYellow.setText(victories+"");
                  }
                  if (col == 2){
                        gameEndText.setFont(new java.awt.Font("Tahoma", 1, 48));
                        gameEndText.setForeground(new java.awt.Color(255, 10, 18));
                        gameEndText.setText("Red Wins!");
                        reset.setEnabled(true);
                        resetAll.setEnabled(true);
                        victories = Integer.parseInt(scrbrdRed.getText());
                        victories++;
                        scrbrdRed.setText(victories+"");
                  }
              }
              t.stop();
          }
    });
    
    private void drop1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_drop1ActionPerformed
        dropPeice();
        column = 1;
        column1 = column1 - 100;
        dropAnim1.setBounds(252, column1, 100, 800);
        if (turn == 0) {
            dropAnim1.setIcon(dropAnimYellow);
            turn = 1;
        } else {
            dropAnim1.setIcon(dropAnimRed);
            turn = 0;
        }
        t.start();
    }//GEN-LAST:event_drop1ActionPerformed

    private void drop2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_drop2ActionPerformed
        dropPeice();
        column = 2;
        column2 = column2 - 100;
        dropAnim2.setBounds(352, column2, 100, 800);
        if (turn == 0) {
            dropAnim2.setIcon(dropAnimYellow);
            turn = 1;
        } else {
            dropAnim2.setIcon(dropAnimRed);
            turn = 0;
        }
        t.start();
    }//GEN-LAST:event_drop2ActionPerformed

    private void drop3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_drop3ActionPerformed
        dropPeice();
        column = 3;
        column3 = column3 - 100;
        dropAnim3.setBounds(452, column3, 100, 800);
        if (turn == 0) {
            dropAnim3.setIcon(dropAnimYellow);
            turn = 1;
        } else {
            dropAnim3.setIcon(dropAnimRed);
            turn = 0;
        }
        t.start();
    }//GEN-LAST:event_drop3ActionPerformed

    private void drop4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_drop4ActionPerformed
        dropPeice();
        column = 4;
        column4 = column4 - 100;
        dropAnim4.setBounds(552, column4, 100, 800);
        if (turn == 0) {
            dropAnim4.setIcon(dropAnimYellow);
            turn = 1;
        } else {
            dropAnim4.setIcon(dropAnimRed);
            turn = 0;
        }
        t.start();
    }//GEN-LAST:event_drop4ActionPerformed

    private void drop5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_drop5ActionPerformed
        dropPeice();
        column = 5;
        column5 = column5 - 100;
        dropAnim5.setBounds(651, column5, 100, 800);
        if (turn == 0) {
            dropAnim5.setIcon(dropAnimYellow);
            turn = 1;
        } else {
            dropAnim5.setIcon(dropAnimRed);
            turn = 0;
        }
        t.start();
    }//GEN-LAST:event_drop5ActionPerformed

    private void drop6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_drop6ActionPerformed
        dropPeice();
        column = 6;
        column6 = column6 - 100;
        dropAnim6.setBounds(751, column6, 100, 800);
        if (turn == 0) {
            dropAnim6.setIcon(dropAnimYellow);
            turn = 1;
        } else {
            dropAnim6.setIcon(dropAnimRed);
            turn = 0;
        }
        t.start();
    }//GEN-LAST:event_drop6ActionPerformed

    private void drop7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_drop7ActionPerformed
        dropPeice();
        column = 7;
        column7 = column7 - 100;
        dropAnim7.setBounds(850, column7, 100, 800);
        if (turn == 0) {
            dropAnim7.setIcon(dropAnimYellow);
            turn = 1;
        } else {
            dropAnim7.setIcon(dropAnimRed);
            turn = 0;
        }
        t.start();
    }//GEN-LAST:event_drop7ActionPerformed

    private void resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetActionPerformed
        round++;
        reset();
    }//GEN-LAST:event_resetActionPerformed

    private void resetAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetAllActionPerformed
        round = 0;
        reset();
        scrbrdRed.setText("0");
        scrbrdYellow.setText("0");
    }//GEN-LAST:event_resetAllActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Connect4.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Connect4.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Connect4.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Connect4.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Connect4().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel backgroundImage;
    private javax.swing.JLabel c1r1;
    private javax.swing.JLabel c1r2;
    private javax.swing.JLabel c1r3;
    private javax.swing.JLabel c1r4;
    private javax.swing.JLabel c1r5;
    private javax.swing.JLabel c1r6;
    private javax.swing.JLabel c2r1;
    private javax.swing.JLabel c2r2;
    private javax.swing.JLabel c2r3;
    private javax.swing.JLabel c2r4;
    private javax.swing.JLabel c2r5;
    private javax.swing.JLabel c2r6;
    private javax.swing.JLabel c3r1;
    private javax.swing.JLabel c3r2;
    private javax.swing.JLabel c3r3;
    private javax.swing.JLabel c3r4;
    private javax.swing.JLabel c3r5;
    private javax.swing.JLabel c3r6;
    private javax.swing.JLabel c4r1;
    private javax.swing.JLabel c4r2;
    private javax.swing.JLabel c4r3;
    private javax.swing.JLabel c4r4;
    private javax.swing.JLabel c4r5;
    private javax.swing.JLabel c4r6;
    private javax.swing.JLabel c5r1;
    private javax.swing.JLabel c5r2;
    private javax.swing.JLabel c5r3;
    private javax.swing.JLabel c5r4;
    private javax.swing.JLabel c5r5;
    private javax.swing.JLabel c5r6;
    private javax.swing.JLabel c6r1;
    private javax.swing.JLabel c6r2;
    private javax.swing.JLabel c6r3;
    private javax.swing.JLabel c6r4;
    private javax.swing.JLabel c6r5;
    private javax.swing.JLabel c6r6;
    private javax.swing.JLabel c7r1;
    private javax.swing.JLabel c7r2;
    private javax.swing.JLabel c7r3;
    private javax.swing.JLabel c7r4;
    private javax.swing.JLabel c7r5;
    private javax.swing.JLabel c7r6;
    private javax.swing.JButton drop1;
    private javax.swing.JButton drop2;
    private javax.swing.JButton drop3;
    private javax.swing.JButton drop4;
    private javax.swing.JButton drop5;
    private javax.swing.JButton drop6;
    private javax.swing.JButton drop7;
    private javax.swing.JLabel dropAnim1;
    private javax.swing.JLabel dropAnim2;
    private javax.swing.JLabel dropAnim3;
    private javax.swing.JLabel dropAnim4;
    private javax.swing.JLabel dropAnim5;
    private javax.swing.JLabel dropAnim6;
    private javax.swing.JLabel dropAnim7;
    private javax.swing.JLabel gameBoard;
    private javax.swing.JLabel gameEndText;
    private javax.swing.JButton reset;
    private javax.swing.JButton resetAll;
    private javax.swing.JLabel scrbrdRed;
    private javax.swing.JLabel scrbrdTitle;
    private javax.swing.JLabel scrbrdYellow;
    private javax.swing.JLabel title;
    // End of variables declaration//GEN-END:variables

}
